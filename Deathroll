import java.util.Scanner;
import java.util.Random;

public class DeathRollGame{
    public static void main (String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        boolean startGame = false;
        String player1Name, player2Name = "Your assigned friend";

        // Game Menu
        while (!startGame) {
            System.out.println("Welcome to Death Roll!");
            System.out.println("1. Start Game");
            System.out.println("2. How to Play");
            System.out.println("3. Quit");

            System.out.print("Enter your choice: ");
            int menuChoice = scanner.nextInt();
            scanner.nextLine(); // Clear buffer

            switch (menuChoice) {
                case 1:
                    startGame = true;
                    break;
                case 2:
                    displayHowToPlay();
                    break;
                case 3:
                    System.out.println("Thanks for checking out Death Roll!");
                    return;
                default:
                    System.out.println("Invalid choice. Please enter 1, 2, or 3.");
            }
        }

        // Get Player 1's Name
        System.out.println("Enter Player 1's name: ");
        player1Name = scanner.nextLine();

        boolean gameOver = false;
        int currentPlayer;
        boolean isAgainstComputer = false;
        final long MAX_LONG = 9223372036854775807L; // Corrected max long value

        // Ask if playing with a friend or the computer
        System.out.println("Do you have a friend to play with, or would you like one assigned to you?");
        System.out.println("1. I have a friend!");
        System.out.println("2. I'm too cool for friends, but I need someone to play with.");
        System.out.print("Enter 1 or 2: ");
        int gameMode = scanner.nextInt();
        scanner.nextLine(); // Clear buffer

        if (gameMode == 1) {
            System.out.println("Enter Player 2's name: ");
            player2Name = scanner.nextLine();
        } else {
            isAgainstComputer = true;
            player2Name = "Your assigned friend";
        }

        // Coin Toss
        System.out.println("Choose heads or tails: ");
        String userChoice = scanner.nextLine().toLowerCase();

        while (!userChoice.equals("heads") && !userChoice.equals("tails")) {
            System.out.print("Invalid choice. Please enter 'heads' or 'tails': ");
            userChoice = scanner.nextLine().toLowerCase();
        }

        System.out.println("Flipping the coin...");
        boolean coinFlipResult = random.nextBoolean();
        String coinFlipOutcome = coinFlipResult ? "heads!" : "tails!";

        System.out.println("The coin landed on: " + coinFlipOutcome);

        if (userChoice.equals(coinFlipOutcome)) {
            System.out.println(player1Name + " won the coin toss! Choose the max number to roll from.");
            currentPlayer = 1;
        } else {
            System.out.println("Big RIP! " + player1Name + ", you lost the coin toss.");
            System.out.println(player2Name + " will choose the starting max number.");
            currentPlayer = 2;
        }

        long max;

        if (currentPlayer == 1) {
            max = getMaxFromPlayer(scanner, player1Name + ", please enter the starting max number: ");
        } else if (isAgainstComputer) {
            max = Math.abs(random.nextLong() % MAX_LONG) + 1;
            System.out.println(player2Name + " has chosen the starting max number: " + max);
        } else {
            max = getMaxFromPlayer(scanner, player2Name + ", enter the starting max number: ");
        }

        System.out.println("Starting the game with a maximum roll of: " + max);

        // Main Game Loop
        while (!gameOver) {
            String currentPlayerName = (currentPlayer == 1) ? player1Name : player2Name;
            System.out.println(currentPlayerName + "'s turn! The current max is: " + max);

            if (currentPlayer == 1 || !isAgainstComputer) {
                System.out.print("Press Enter to roll...");
                scanner.nextLine(); // Wait for the player to roll
            } else {
                System.out.println(player2Name + " is rolling...");
            }

            long roll;

            if (max == 1) {
                roll = 1; // If the max is 1, the player automatically rolls a 1
            } else if (max > Integer.MAX_VALUE) {
                roll = Math.abs(random.nextLong() % max) + 1;
            } else {
                roll = random.nextInt((int) max) + 1;
            }

            System.out.println(currentPlayerName + " Rolled: " + roll);

            if (roll == 1) {
                System.out.println(currentPlayerName + " loses by rolling a 1!");
                System.out.println("Game Over!");
                gameOver = true;
            } else {
                max = roll; // Update the max roll
                currentPlayer = (currentPlayer == 1) ? 2 : 1;
            }
        }
    }

    // How to Play Instructions
    public static void displayHowToPlay() {
        System.out.println("\n--- How to Play Death Roll ---");
        System.out.println("1. The game starts with a maximum roll value. This number can be from 1 to 9223372036854775807.");
        System.out.println("2. Players take turns rolling a random number between 1 and the current max.");
        System.out.println("3. The roll becomes the new max for the next player.");
        System.out.println("4. The game continues until a player rolls a 1, which means they lose.");
        System.out.println("5. If playing against the computer, it will automatically roll for its turns.");
        System.out.println("------------------------------\n");
    }

    // Method to Get the Max from a Player
    public static long getMaxFromPlayer(Scanner scanner, String prompt) {
        final long MAX_LONG = 9223372036854775807L;
        long max = 0;
        boolean validInput = false;

        while (!validInput) {
            System.out.print(prompt);
            try {
                max = scanner.nextLong();
                scanner.nextLine(); // Clear buffer
                if (max > MAX_LONG) {
                    System.out.println("Error: The number cannot be larger than " + MAX_LONG + ". Please enter a smaller number.");
                } else if (max <= 0) {
                    System.out.print("Error: The max number must be greater than 0. Try again.");
                } else {
                    validInput = true;
                }
            } catch (Exception e) {
                System.out.println("Invalid input. Please enter a valid number.");
                scanner.nextLine(); // Clear invalid input
            }
        }
        return max;
    }
}
